(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{1108:function(t,s,a){"use strict";a.r(s);var e=a(6),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"필요한-상황"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#필요한-상황"}},[t._v("#")]),t._v(" 필요한 상황")]),t._v(" "),s("p",[t._v("테이블뷰 셀의 경우 일반적으로 각 셀이 동일 속성들로 구성될 때가 많다. 아래의 사진을 보면"),s("br"),t._v(" "),s("img",{attrs:{src:a(521),alt:"17-1"}})]),t._v(" "),s("p",[t._v("테이블 뷰 셀들이 이미지, 타이틀, 서브타이틀로 구성되어 있고 이러한 형식이 내부 셀 데이터만 다르지 전체적으로 달라지지 않는다. 시계 앱 클론코딩 중 아래와 같은 테이블 뷰를 구현해야 하는 상황이다."),s("br"),t._v(" "),s("img",{attrs:{src:a(522),alt:"17-2"}})]),t._v(" "),s("p",[t._v("동일한 테이블 뷰의 자식으로 셀들이 만들어지지만 그 셀들은 각각의 구성이 다 다르다. 왼쪽에 UILabel로 구성되는 것 외에 오른쪽 UI들이 UITextField로 구성되거나 스위치로 구성되는 등 조금씩 다른 부분이 있다.")]),t._v(" "),s("p",[t._v("일반적으로 테이블 뷰 셀을 만들때 "),s("code",[t._v("tableView.dequeueReusableCell")]),t._v("을 통해 전체 셀들을 동일한 형태로 강제하게 되는데, 서로 다른 형태의 테이블 뷰 셀을 만들려면 어떻게 해야할까?")]),t._v(" "),s("h2",{attrs:{id:"switch문-활용"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#switch문-활용"}},[t._v("#")]),t._v(" switch문 활용")]),t._v(" "),s("p",[t._v("단순한 방법이다. 커스텀하고자 하는 테이블 뷰 셀을 UITableViewCell을 상속하는 커스텀 클래스로 새로 정의하고 indexPath.row의 값에 따라 switch문으로 셀을 생성해주면 된다.")]),t._v(" "),s("p",[s("code",[t._v("UITableViewDataSource")]),t._v(" 프로토콜을 채택하여 "),s("code",[t._v("cellForRowAt")]),t._v(" 파라미터를 갖는 함수를 구현해주자.")]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UITableViewDataSource")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("tableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cellForRowAt indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCell")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 커스텀클래스 1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cell "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dequeueReusableCell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("withIdentifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AlarmSettingRepeatTableViewCell"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AlarmSettingRepeatTableViewCell")]),t._v("\n        cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backgroundColor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UIColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("named"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ModalSettingTableViewColor"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cell\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 커스텀클래스 2")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cell "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dequeueReusableCell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("withIdentifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AlarmSettingLabelTableViewCell"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AlarmSettingLabelTableViewCell")]),t._v("\n        cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backgroundColor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UIColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("named"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ModalSettingTableViewColor"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cell\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("dequeueReusableCell")]),t._v(" "),s("p",[t._v("셀마다 서로 다른 인스턴스를 사용한다고 해서 "),s("code",[t._v("dequeueReusableCell")]),t._v(" 메서드를 사용하지 않으면 안된다. iOS 자체적으로 테이블 뷰 셀을 메모리적인 관점에서 효율적으로 관리하기 위해 "),s("code",[t._v("dequeueReusableCell")]),t._v("로 테이블 뷰 셀을 등록하는 것인데, 당장 화면 상에 보이는 것만을 목적으로 하여 테이블 뷰 셀을 고정된 UI로 구현하면 어떤 예외사항이 벌어질 지 모른다.")]),t._v(" "),s("p",[t._v("가령 매우 작은 사이즈의 기종이 새로 출시되어 테이블 뷰를 드래그하여 dequeueReusableCell에 등록하지 않은 테이블 뷰 셀이 화면 바깥으로 나가게 되면 해당 셀은 메모리적으로 reusable될 수 없다.")])]),t._v(" "),s("h2",{attrs:{id:"reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[t._v("#")]),t._v(" Reference")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://stackoverflow.com/questions/30774671/uitableview-with-more-than-one-custom-cells-with-swift",target:"_blank",rel:"noopener noreferrer"}},[t._v("UITableView with more than one custom cells with swift"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports},521:function(t,s,a){t.exports=a.p+"assets/img/17-1.39ab0806.png"},522:function(t,s,a){t.exports=a.p+"assets/img/17-2.e06c7766.png"}}]);
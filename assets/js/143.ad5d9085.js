(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{677:function(t,a,s){"use strict";s.r(a);var n=s(6),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"그리디"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#그리디"}},[t._v("#")]),t._v(" 그리디")]),t._v(" "),a("p",[t._v("현재 상태의 가장 좋은 선택을 반복하여 해를 구성한다는 점에서 가장 직관적이다.")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("동전 교환문제(거스름돈을 돌려주는 문제)를 생각해보자. 동전은 1원, 10원, 50원, 100원짜리 동전이 존재한다.\n입력으로 372원이 들어왔을때 최소 개수의 동전으로 거스름돈을 물려주는 경우는?\n\n1) 37 * 10 + 1*2 -> 총 동전의 개수 : 39개\n2) 100 * 3 + 50 * 1 + 10 * 2 + 1 * 2 -> 3 + 1 + 2 + 2 -> 총 동전의 개수 : 8개\n")])])]),a("p",[t._v("가장 큰 동전의 단위를 가장 많이 가장 먼저 거슬러주는 것이 문제 풀이의 기준이다. "),a("strong",[t._v("이를 증명해야하며 증명이 실제로 가능하다.")]),t._v(" 가장 큰 동전 단위를 먼저 사용한다는 기준이 바로 "),a("strong",[t._v("그리디 기준")]),t._v("이라고 한다. .")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("동전 교환 문제를 생각해보자.\n1원, 5원, 7원짜리 동전을 기본 단위로 하여 거스름돈을 물려준다고 가정했을 때\n최소 동전으로 거스름돈을 물려주는 경우를 계산해보자.\n\ninput : 15원\n")])])]),a("p",[t._v("위 문제를 기존의 그리디 기준에 따라 해결하면 "),a("code",[t._v("10 = 7*1 + 1*3")]),t._v("으로 4개의 동전을 사용하여 거스름돈을 주게 된다."),a("br"),t._v("\n하지만 "),a("code",[t._v("10 = 5*2")]),t._v("라는 더 간단한 경우의 수로 거스름돈을 물려줄 수 있기 때문에 위의 그리디 해는 잘못되었다.")]),t._v(" "),a("p",[t._v("기존의 그리디 문제가 적용되지 못했던 이유는 "),a("strong",[t._v("각 단위가 서로 배수단위로 이루어지지 않았기 때문이었다.")])]),t._v(" "),a("h2",{attrs:{id:"그리디-예시"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#그리디-예시"}},[t._v("#")]),t._v(" 그리디 예시")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("일을 처리하는 데에 소요되는 시간과 총 소요되어야 할 시간이 입력으로 주어진다.\n시간 내에 가장 많은 수의 일을 처리할 수 있는 경우를 계산해보자.\n")])])]),a("h3",{attrs:{id:"예시-그리디-기준과-증명"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#예시-그리디-기준과-증명"}},[t._v("#")]),t._v(" 예시) 그리디 기준과 증명")]),t._v(" "),a("p",[t._v("가장 적은 시간이 소요되는 일부터 처리한다.")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("proof) 그리디 기준에 따라 계산된 해가 틀린 해라고 가정한다.\n\na1 &lt; a2 &lt; a3 (해가 아님)\nb1 &lt; b2 &lt; b3 &lt; b4 (b1~b4라는 네 개의 일을 처리할 경우가 있었다고 가정)\nb1~b4도 그리디 기준에 부합해야함.\n\na1 + a2 + a3 = X\nb1 + b2 + b3 = Y\n\n(Y >= X)\n\nb1~b4는 그리디 기준에 따라 해라고 가정하였으므로\nb1 ~ b4의 합은 총 소요시간인 T보다 작거나 같아야한다.\n\na1~a3가 그리디 기준에 따라 해가 되지 못했던 이유는\na4를 새로 선정하여 더했을 때 총 소요시간인 T를 초과하기 때문이다. (X + a4 > T)\n\na4는 b4보다 작거나 같으므로\n\nX + a4 &lt;= Y + b4와 X + a4 > T 라는 두 조건이 모순을 일으키게 된다.\n(a1~a4가 해가 될수 없었던 이유가 모순을 일으킨다.)\n")])])]),a("h2",{attrs:{id:"강의실-배정-문제"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#강의실-배정-문제"}},[t._v("#")]),t._v(" 강의실 배정 문제")]),t._v(" "),a("p",[t._v("강의실 배정에 있어서 수업 간 시간이 겹치지 않으면서 가장 많은 수업을 강의실에 배정하고 싶을 때 최대 몇개의 강의실을 배정할 수 있는가?")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# S,F의 각 인덱스는 강의실 번호를 의미한다.")]),t._v("\nS "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 수업 시작 시간")]),t._v("\nF "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 수업 종료 시간")]),t._v("\n")])])]),a("p",[a("strong",[t._v("그리디 기준의 후보들")])]),t._v(" "),a("ol",[a("li",[t._v("수업시간이 짧은 강의부터 배정한다.\n"),a("ul",[a("li",[t._v("반례) a강의와 c강의가 연속된 시간에 진행되는데 b강의가 a와c 중간에 끼게 되는 경우")])])]),t._v(" "),a("li",[t._v("빨리 시작하는 강의부터 배정한다.\n"),a("ul",[a("li",[t._v("반례) a강의가 가장 빨리 시작하는데 그 시간사이에 여러 강의가 진행되는 경우")])])]),t._v(" "),a("li",[t._v("가장 적게 겹치는 강의부터 배정")]),t._v(" "),a("li",[a("strong",[t._v("빨리 끝나는 강의부터 배정한다. (끝난 뒤의 남은 시간이 많다는 것을 의미)")]),t._v(" - 채택")])]),t._v(" "),a("h3",{attrs:{id:"구현"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#구현"}},[t._v("#")]),t._v(" 구현")]),t._v(" "),a("ol",[a("li",[t._v("강의가 빨리 끝나는 시간으로 오름차순 정렬한다. O(nlogn)")]),t._v(" "),a("li",[t._v("L = [0], k=0, O(1)")]),t._v(" "),a("li",[t._v("for 루프처리")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# O(n)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" F"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" S"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 강의 i와 k가 겹치지 않는다.")]),t._v("\n        L"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i\n")])])]),a("ol",[a("li",[t._v("return L")])]),t._v(" "),a("p",[t._v("총 수행시간 - O(nlogn)")]),t._v(" "),a("h3",{attrs:{id:"정확성-증명"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#정확성-증명"}},[t._v("#")]),t._v(" 정확성 증명")]),t._v(" "),a("p",[t._v("강의실 배정 문제의 그리디 기준에 따른 정확성을 증명한다.")]),t._v(" "),a("p",[t._v("귀류법을 활용할때, 본래 그리디 기준에 따라 산출된 해를 부정한 뒤 모순이 있음을 확인한다.")]),t._v(" "),a("p",[t._v("위 문제의 그리디 솔루션 (1,4,8,11)과 옵티멀 솔루션(a1, a2, a3, a4, a5)가 있다. 현재 그리디 솔루션의 해는 참이 아니라고 가정한 상태이므로 이에 대한 모순을 찾아보게 되면")]),t._v(" "),a("p",[t._v("G𝑖 : i번 강의와 겹치지 않는 강의들의 집합 (그리디 솔루션의 부분집합)")]),t._v(" "),a("p",[t._v("A𝑖 : a𝑖 강의와 겹치지 않는 강의들의 집합 (옵티멀 솔루션의 부분집합)")]),t._v(" "),a("p",[t._v("G₁을 생각해볼 때, G₁의 1번강의는 "),a("strong",[t._v("그리디 기준에 따라 전체 강의들 중 가장 빨리 끝나는 강의이다.")]),t._v(" 따라서 A₁ 솔루션의 a₁은 G₁의 1번강의보다 더 빨리 끝날 수는 없다.")]),t._v(" "),a("p",[t._v("위의 증명에 따라 G₁ ⊇ A₁이 성립한다. (G₁ 강의 이후 남은 시간이 A₁ 강의 이후 남은 시간보다 많기 때문)")]),t._v(" "),a("p",[t._v("마찬가지로 G₁ ~ G₄까지 위의 조건이 증명되며 "),a("strong",[t._v("A의 경우 최종적으로 a₅ 강의가 남는다.")]),t._v(" 그리디 기준에 따라 (1,4,8,11)강의를 선정 하였음에도 a₅로 뽑을 수 있는 강의가 남을 수가 있다고 이야기 하지만, 그럴 수 없기에 모순이 발생한다.")])])}),[],!1,null,null,null);a.default=e.exports}}]);
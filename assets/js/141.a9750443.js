(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{671:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Udemy 자바스크립트 알고리즘 강의 정리본입니다.")]),t._v(" "),s("h2",{attrs:{id:"코드-시간-측정하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#코드-시간-측정하기"}},[t._v("#")]),t._v(" 코드 시간 측정하기")]),t._v(" "),s("p",[t._v("자바스크립트에서는 "),s("code",[t._v("performance")]),t._v(" 객체를 제공합니다. 내부에는 여러 메서드 및 프로퍼티들이 존재하는데, 코드 성능 측정을 위해 "),s("code",[t._v("now")]),t._v(" 메서드를 사용하게 됩니다.")]),t._v(" "),s("p",[t._v("1~N까지 모두 더한 값을 출력하는 코드 둘을 비교해봅시다.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addUpTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// performance.now => 코드 수행 후의 시간")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" t1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" performance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addUpTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" t2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" performance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 성능 측정")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Time elapsed: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" seconds")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 등차수열")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addUpTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// performance.now => 코드 수행 후의 시간")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" t1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" performance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addUpTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" t2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" performance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 성능 측정")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Time elapsed: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" seconds")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("매번 수동으로 코드 러닝 타임을 측정할 수는 없습니다. 측정 방식이 기기마다 차이가 있을 뿐더러 환경에 따라 달라지기 때문입니다. 측정에 대한 절대값으로 성능을 비교함에 있어서는 한계점이 존재합니다.")]),t._v(" "),s("p",[t._v("이때 성능 측정을 위한 방법론으로 "),s("strong",[t._v("연산 개수의 측정이 있습니다.")])]),t._v(" "),s("p",[s("code",[t._v("addUpTo")]),t._v(" 첫 번째 코드의 경우 덧셈 및 대입연산자가 for 반복문 내에서 N번만큼 사용됩니다.")]),t._v(" "),s("p",[t._v("반면 두 번째 코드의 경우 각각 한 번만 사용됩니다.")]),t._v(" "),s("p",[t._v("입력의 크기가 얼마나 커지냐에 따라 함수 내부에서 실행되는 연산 개수가 분명하게 달라지게 됩니다. 이때 대두되는 개념이 "),s("strong",[t._v("추세인데,")]),t._v(" 빅-오 표기법 개념이 여기서부터 출발하게 됩니다.")]),t._v(" "),s("p",[t._v("빅-오를 한 마디로 정리하면 "),s("strong",[t._v("입력의 크기와 실행시간의 관계라고 할 수 있습니다.")]),t._v(" 실행의 최악의 경우를 생각하여 그 관계를 빅오 표기법으로 정리할 수 있게 됩니다.")]),t._v(" "),s("ol",[s("li",[t._v("O(1) -> 입력 크기에 상관 없이 연산 개수가 고정일때")]),t._v(" "),s("li",[t._v("O(n), O(n²), O(n³logn)...")])]),t._v(" "),s("h2",{attrs:{id:"자바스크립트-공간복잡도"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#자바스크립트-공간복잡도"}},[t._v("#")]),t._v(" 자바스크립트 공간복잡도")]),t._v(" "),s("p",[t._v("공간복잡도는 실행시간을 제외하고 알고리즘 자체가 차지하는 공간에 대해 주목합니다.")]),t._v(" "),s("p",[t._v("자바스크립트에서 "),s("code",[t._v("boolean")]),t._v(", "),s("code",[t._v("Number")]),t._v(", "),s("code",[t._v("null")]),t._v("은 모두 불변 공간입니다.(constant space) 입력 크기에 상관 없이 모두 같은 공간을 차지하게 됩니다.")]),t._v(" "),s("ol",[s("li",[t._v("boolean, numbers, null은 O(1) 공간을 차지합니다.")]),t._v(" "),s("li",[t._v("문자열의 경우 O(n) 공간을 차지합니다.")]),t._v(" "),s("li",[t._v("배열 역시 O(n)공간을 차지합니다.")])]),t._v(" "),s("h2",{attrs:{id:"객체와-빅오"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#객체와-빅오"}},[t._v("#")]),t._v(" 객체와 빅오")]),t._v(" "),s("p",[t._v("자바스크립트 객체의 특성은 "),s("strong",[t._v("정렬될 필요가 없다는 것입니다.")]),t._v(" (해시맵 자료구조처럼 동작) 따라서 내부 메서드의 시간복잡도는 다음과 같게 됩니다.")]),t._v(" "),s("ol",[s("li",[t._v("삽입 - O(1)")]),t._v(" "),s("li",[t._v("삭제 - O(1)")]),t._v(" "),s("li",[t._v("탐색 - O(n) (key값에 대한 원하는 value를 찾기 위한 순회)")]),t._v(" "),s("li",[t._v("접근 - O(1) (key값 대입과 동시에 value가 나옴)")])]),t._v(" "),s("p",[t._v("다음은 자바스크립트 객체 메서드들에 대한 시간복잡도입니다.")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("Object.keys(객체)")]),t._v(" - O(n), 모든 키 값을 순회")]),t._v(" "),s("li",[s("code",[t._v("Object.values(객체)")]),t._v(" - O(n), 모든 value를 순회")]),t._v(" "),s("li",[s("code",[t._v("Object.entries(객체)")]),t._v(" - O(n), 모든 key,value쌍을 순회")]),t._v(" "),s("li",[s("code",[t._v("객체.hasOwnProperty(key값 이름)")]),t._v(" - O(1), 인자로 전달된 키값이 있는지 검사(해시 자료구조이므로 상수시간)")])]),t._v(" "),s("h2",{attrs:{id:"배열과-빅오"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#배열과-빅오"}},[t._v("#")]),t._v(" 배열과 빅오")]),t._v(" "),s("p",[t._v("배열은 선형적으로 인덱스라는 개념과 함께 원소가 정렬되어 있는 형태이기 때문에 삽입 / 삭제에 시간복잡도를 희생해야합니다. (n은 배열 원소의 개수)")]),t._v(" "),s("ol",[s("li",[t._v("삽입 - O(n) (배열 끝에 원소를 추가할때는 O(1)) unshift / push")]),t._v(" "),s("li",[t._v("삭제 - O(n) (배열 끝의 원소를 삭제할때는 O(1)) shift / pop")]),t._v(" "),s("li",[t._v("접근 - O(1), 등록된 인덱스가 객체 키값처럼 사용됨")]),t._v(" "),s("li",[t._v("탐색 - O(n), 인덱스에 따른 값 검색")])]),t._v(" "),s("p",[t._v("다음은 자바스크립트 배열 내장 메서드에 대한 시간복잡도입니다.")]),t._v(" "),s("ol",[s("li",[t._v("push - O(1)")]),t._v(" "),s("li",[t._v("pop - O(1)")]),t._v(" "),s("li",[t._v("shift - O(N)")]),t._v(" "),s("li",[t._v("unshift - O(N)")]),t._v(" "),s("li",[t._v("concat - O(N)")]),t._v(" "),s("li",[t._v("slice - O(N), 배열 복사")]),t._v(" "),s("li",[t._v("splice - O(N), 특정 원소 및 부분 배열 대체 또는 삭제. 최악의 경우 unshift 또는 shift 연산을 하게됨")]),t._v(" "),s("li",[t._v("sort - O(NlogN)")]),t._v(" "),s("li",[t._v("forEach map, filter, reduce... - O(N)")])])])}),[],!1,null,null,null);s.default=e.exports}}]);
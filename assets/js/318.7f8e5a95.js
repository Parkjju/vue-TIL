(window.webpackJsonp=window.webpackJsonp||[]).push([[318],{862:function(e,s,t){"use strict";t.r(s);var o=t(6),r=Object(o.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[s("a",{attrs:{href:"https://www.javatpoint.com/session-vs-cookies",target:"_blank",rel:"noopener noreferrer"}},[e._v("Session vs cookie"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"difference-between-session-and-cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#difference-between-session-and-cookie"}},[e._v("#")]),e._v(" Difference between session and cookie")]),e._v(" "),s("p",[e._v("세션과 쿠키는 사이트 내의 서로 다른 페이지들로 이동할 때 사용자 정보를 기억해두는 역할을 한다. 둘의 가장 큰 차이점은 세션은 서버에 저장되는 "),s("code",[e._v("server-side")]),e._v("이고 쿠키는 유저 브라우저에 저장되는 "),s("code",[e._v("client-side")]),e._v("라는 점에 있다.")]),e._v(" "),s("h2",{attrs:{id:"what-is-session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-session"}},[e._v("#")]),e._v(" What is Session?")]),e._v(" "),s("p",[e._v("세션은 웹사이트의 여러 페이지들에서 사용될 수 있도록 정보를 일시적으로 저장하는 것을 말한다. 유저 세션은 웹앱에 로그인 할 때 시작되고 로그아웃 할 때 끝난다.")]),e._v(" "),s("p",[e._v("세션은 서버에 의해서만 해독될 수 있도록 바이너리 형태로 암호화 된다. 각 유저마다 유일하게 생성되는 특징이 있다.")]),e._v(" "),s("p",[e._v("유저가 웹 사이트에 확인되는 것은 세션ID의 도움으로 이루어진다. 세션 아이디는 서버에 저장되는 유일한 숫자이고, 쿠키와 폼 필드 또는 URL로 저장된다.")]),e._v(" "),s("p",[e._v("세션의 처리 과정을 정리하면 다음과 같다.")]),e._v(" "),s("ol",[s("li",[e._v("클라이언트가 GET 또는 POST 메소드로 서버에 요청을 보낸다.")]),e._v(" "),s("li",[e._v("서버에서 세션 아이디가 만들어지고 DB에 저장된다. 이후 서버에서 쿠키와 함께 세션아이디를 리스폰스에 담아 클라이언트에게 전달한다.")]),e._v(" "),s("li",[e._v("쿠키와 세션아이디는 브라우저에 저장되고, 이후 요청이 이루어질 때 매번 서버로 다시 보내진다. 서버가 갖고있는 세션아이디와 받은 세션아이디를 비교햐여 일치하면 HTTP 200상태(정상)를 반환한다.")])]),e._v(" "),s("h2",{attrs:{id:"what-is-cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-cookie"}},[e._v("#")]),e._v(" What is Cookie?")]),e._v(" "),s("p",[e._v("쿠키는 유저 컴퓨터(하드디스크)에 저장되는 작은 텍스트 파일이다. 최대 크기는 4KB이다. 쿠키를 통해 웹사이트가 사용자 브라우징 히스토리를 추적할 수 있게된다.")]),e._v(" "),s("p",[e._v("스트링 데이터 타입만 저장할 수 있다. 쿠키에 저장되는 정보들은 안전하지가 않은데, 이는 정보가 텍스트 형태로 클라이언트-사이드에 저장되기 때문이다. (모두가 읽을 수 있다)")]),e._v(" "),s("p",[e._v("쿠키는 HTTP 헤더를 통해 서버와 클라이언트 간에 통신이 이루어진다. 쿠키의 저장은 브라우저에 의해 결정된다.")]),e._v(" "),s("h2",{attrs:{id:"set-cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-cookie"}},[e._v("#")]),e._v(" set cookie")]),e._v(" "),s("p",[e._v("추가 예정"),s("br"),e._v(" "),s("a",{attrs:{href:"https://stackoverflow.com/questions/16209145/how-to-set-cookie-in-node-js-using-express-framework",target:"_blank",rel:"noopener noreferrer"}},[e._v("stackoverflow - set cookie"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);
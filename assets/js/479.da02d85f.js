(window.webpackJsonp=window.webpackJsonp||[]).push([[479],{1049:function(s,t,a){"use strict";a.r(t);var n=a(6),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"주요-프로토콜-소개"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#주요-프로토콜-소개"}},[s._v("#")]),s._v(" 주요 프로토콜 소개")]),s._v(" "),t("h3",{attrs:{id:"_1-equatable-프로토콜"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-equatable-프로토콜"}},[s._v("#")]),s._v(" 1. Equatable 프로토콜")]),s._v(" "),t("p",[s._v("구조체, 열거형의 경우 "),t("code",[s._v("Equatable")]),s._v(" 프로토콜 채택 시 모든 저장 속성이 "),t("code",[s._v("Equatable")]),s._v("을 채택한 타입이라면 비교연산자 메서드가 자동으로 구현된다. 스위프트 기본 타입들은 모두 "),t("code",[s._v("Equatable")]),s._v(" 프로토콜을 채택하고 있다.")]),s._v(" "),t("p",[s._v("단, 열거형은 연관값이 없을때 "),t("code",[s._v("Equatable")]),s._v(" 프로토콜을 채택하지 않더라도 비교연산이 서로 가능하다.")]),s._v(" "),t("div",{staticClass:"language-swift extra-class"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Direction")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" east\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" west\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" south\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" north\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Direction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("north "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Direction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("east "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 에러 안남.")]),s._v("\n")])])]),t("div",{staticClass:"language-swift extra-class"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 원래라면 아래와 같이 작성해야 하지만")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 굳이 그럴 필요가 없도록 애플 자체적으로 조치해놓았음")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Direction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Equatable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" east\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" west\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" south\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" north\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lhs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Direction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" rhs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Direction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//....")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Direction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("north "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Direction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("east\n")])])]),t("p",[s._v("열거형 뿐만 아니라 구조체도 유사하게 동작한다.")]),s._v(" "),t("div",{staticClass:"language-swift extra-class"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dog")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Int")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extension")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Equatable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Equatable을 채택한 이상 굳이 연산자 메서드를 구현할 필요 없음")]),s._v("\n")])])]),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("클래스와 Equatable")]),s._v(" "),t("p",[s._v("클래스는 비교연산 시 "),t("code",[s._v("===")]),s._v(" 연산자를 사용한다. 원칙적으로 동일성 구현이 안되기 때문에 "),t("code",[s._v("Equatable")]),s._v(" 프로토콜을 채택하더라도 내부 동작을 구현해야한다. (같다고 결론내리는 기준을 구현하면 된다는 것!)")])]),s._v(" "),t("h3",{attrs:{id:"_2-comparable-프로토콜"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-comparable-프로토콜"}},[s._v("#")]),s._v(" 2. Comparable 프로토콜")]),s._v(" "),t("p",[s._v("Comparable 프로토콜은 Equatable을 상속한다. 따라서 Comparable 프로토콜을 채택한 타입에서 "),t("code",[s._v("==")]),s._v(" 연산자를 구현해야 하는 경우가 발생한다. 구조체는 저장속성들이 Equatable 프로토콜을 채택하는 타입들이면 구현하지 않아줘도 된다. 클래스는 "),t("code",[s._v("==")]),s._v(", "),t("code",[s._v("<")]),s._v(" 둘다 구현해야함.")]),s._v(" "),t("p",[s._v("Comparable 프로토콜의 요구사항은 "),t("code",[s._v("static func < (lhs: Self, rhs: Self) -> Bool")]),s._v(" 메서드의 구현이다.")]),s._v(" "),t("p",[s._v("구조체, 클래스 모든 저장 속성이 Comparable 프로토콜을 채택한 경우에도 "),t("code",[s._v("<")]),s._v(" 연산자는 구현해야한다. Equatable의 경우 구조체에서는 굳이 구현할 필요가 없었다.")]),s._v(" "),t("p",[s._v("열거형의 경우에는 "),t("strong",[s._v("원시값이 없으면 연관값이 있더라도")]),s._v(" Comparable 프로토콜을 채택하면 "),t("code",[s._v("<")]),s._v(" 연산자를 자동으로 제공한다.")]),s._v(" "),t("div",{staticClass:"language-swift extra-class"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Direction: Int를 통해 원시값 타입을 지정하였음")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Direction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" east\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" west\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" south\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" north\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 원시값을 지정한 순간 Comparable 채택 시 rawValue에 대한 연산자 메서드 구현해야됨")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extension")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Direction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Comparable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Type 'Direction' does not conform to protocol 'Comparable'")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lhs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Direction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" rhs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Direction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Bool")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" lhs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rawValue "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" rhs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rawValue\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"_3-hashable-프로토콜"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-hashable-프로토콜"}},[s._v("#")]),s._v(" 3. Hashable 프로토콜")]),s._v(" "),t("p",[s._v("스위프트 기본 타입들은 이미 "),t("code",[s._v("Hashable")]),s._v(" 프로토콜을 채택하고 있다. 해셔블 프로토콜은 유일한 값을 갖도록 하여 딕셔너리 키값 또는 Set의 요소로써 사용될 수 있게 해준다.")]),s._v(" "),t("div",{staticClass:"language-swift extra-class"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("num1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),t("div",{staticClass:"language-swift extra-class"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dog")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Int")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extension")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Hashable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// or")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extension")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Hashable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("hash")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("into hasher"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inout")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Hasher")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        hasher"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("combine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        hasher"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("combine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("구조체에 대해서는 저장속성이 "),t("code",[s._v("Hashable")]),s._v(" 프로토콜을 채택한 타입들이면 "),t("code",[s._v("hash")]),s._v("함수를 구현하지 않아도 되고, 열거형은 원시값과 상관 없이 연관값의 타입들이 "),t("code",[s._v("Hashable")]),s._v(" 프로토콜을 채택한 타입들이면 "),t("code",[s._v("hash")]),s._v(" 함수를 구현하지 않아도 된다.")]),s._v(" "),t("p",[s._v("클래스는 "),t("code",[s._v("hash")]),s._v("함수를 구현해야 한다. "),t("code",[s._v("Hashable")]),s._v(" 프로토콜 역시 "),t("code",[s._v("Equatable")]),s._v(" 프로토콜을 채택하므로 "),t("code",[s._v("==")]),s._v("연산자 메서드까지 구현해야한다.")]),s._v(" "),t("h3",{attrs:{id:"_4-caseiterable-프로토콜"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-caseiterable-프로토콜"}},[s._v("#")]),s._v(" 4. CaseIterable 프로토콜")]),s._v(" "),t("p",[t("code",[s._v("CaseIterable")]),s._v(" 프로토콜을 채택한 "),t("strong",[s._v("열거형의 경우")]),s._v(" "),t("code",[s._v(".allCases")]),s._v("라는 타입속성을 갖게 된다.")]),s._v(" "),t("div",{staticClass:"language-swift extra-class"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Color")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CaseIterable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" red"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" green"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" blue\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Color")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("allCases"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [Color.red, Color.green, Color.blue]")]),s._v("\n")])])]),t("p",[t("code",[s._v(".allCases")]),s._v("속성은 전체 열거형 케이스를 담은 배열을 리턴해준다.")]),s._v(" "),t("p",[t("code",[s._v("CaseIterable")]),s._v("은 프로토콜 이름 뜻 그대로 열거형 케이스를 이터러블 한 객체로 반환해주는 속성을 제공한다.")]),s._v(" "),t("div",{staticClass:"language-swift extra-class"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" color "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Color")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("allCases "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("color")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("각 케이스를 순회 가능하게 되는 것도 장점이고, 배열에 전체 케이스를 담아 넘겨주기 때문에 "),t("strong",[s._v("배열 자체 count 속성을 통해 열거형 전체 케이스 수를 빠르게 파악할 수 있다.")])]),s._v(" "),t("p",[s._v("이 외에도 배열이기 때문에 사용할 수 있는 것들을 (map과 같은 고차함수 등) 열거형 케이스에 대해 사용할 수 있다.")]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),t("p",[s._v("연관값이 있는 열거형에 대해서는 "),t("code",[s._v("CaseIterable")]),s._v(" 프로토콜을 따르지 않기 때문에 구현 불가능하다. 원시값을 상관 없음")]),s._v(" "),t("p",[s._v("연관값은 케이스에 대해 수 많은 형태가 파생된다는 점을 생각해보면 그 이유가 납득이 된다.")])]),s._v(" "),t("h2",{attrs:{id:"never타입과-검증함수"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#never타입과-검증함수"}},[s._v("#")]),s._v(" Never타입과 검증함수")]),s._v(" "),t("p",[s._v("함수에서의 "),t("code",[s._v("return")]),s._v("이 갖는 의미는 값의 리턴과 "),t("strong",[s._v("함수 내부로 전달했던 CPU 제어권을 반납한다는 의미가 있다.")])]),s._v(" "),t("p",[t("code",[s._v("Never")]),s._v("타입의 함수는 CPU제어권을 리턴하지 않는다. 앱이 강제종료됨")]),s._v(" "),t("div",{staticClass:"language-swift extra-class"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("crashAndBurn")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Never")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fatalError")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"앱의 해킹이 발견됨"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("crashAndBurn")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[t("code",[s._v("Never")]),s._v("타입은 내부가 빈 열거형이고 인스턴스 생성도 불가능한 임시 타입일 뿐이다.")]),s._v(" "),t("p",[t("code",[s._v("Never")]),s._v("는 런타임에서 발생할 수 있는 에러를 미리 발견하여 검증할때에 사용한다.")]),s._v(" "),t("p",[s._v("디버깅 함수에는 아래와 같은 것들이 있다. 이들은 앱을 일부러 종료시킨 후 버그를 발견할 때 사용한다. assert함수는 프로덕션 환경에서는 작동하지 않는다. FatalError는 프로덕션, 디벨롭 단계 모두에서 앱을 종료시킨다.")]),s._v(" "),t("ul",[t("li",[s._v("assert()")]),s._v(" "),t("li",[s._v("assertionFailure()")]),s._v(" "),t("li",[s._v("precondition()")]),s._v(" "),t("li",[s._v("preconditionFailure()")]),s._v(" "),t("li",[s._v("fatalError()")])]),s._v(" "),t("p",[s._v("assert함수의 첫 번째 파라미터는 참과 거짓을 판별할 수 있는 조건이 들어가고, 두 번째 파라미터는 에러 메세지가 들어간다.")]),s._v(" "),t("p",[t("code",[s._v("assertionFailure")]),s._v("는 실패인 경우에 대해서만 처리할때 사용한다.")]),s._v(" "),t("div",{staticClass:"language-swift extra-class"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("enterWrongValue1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" someWrongInput "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("assert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("someWrongInput "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"유저가 값을 잘못 입력"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("enterWrongValue1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("div",{staticClass:"language-swift extra-class"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("enterWrongValue2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" someWrongInput "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" someWrongInput "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 정상적으로 처리하는 코드")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 실패 경우")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("assertionFailure")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"유저가 값을 잘못 입력"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[t("code",[s._v("precondition")]),s._v("은 "),t("code",[s._v("assert")]),s._v("와 사용법이 완전히 동일하지만 앱이 구동되는 환경이 프로덕션일 때에만 작동한다는 점에서 차이가 있다.")]),s._v(" "),t("h2",{attrs:{id:"키패스-keypath-와-셀렉터-selector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#키패스-keypath-와-셀렉터-selector"}},[s._v("#")]),s._v(" 키패스(keyPath)와 셀렉터(selector)")]),s._v(" "),t("p",[s._v("키패스는 인스턴스 속성 또는 메서드에 대해 직접 접근하는 것이 아닌 문자열로 접근하는 방법이다. 직접 접근이라 함은 "),t("code",[s._v("person.name")]),s._v("과 같이 인스턴스에 "),t("code",[s._v(".")]),s._v(" 연산자를 통한 접근을 의미한다. "),t("code",[s._v("#keyPath(Person.name)")])]),s._v(" "),t("p",[s._v("셀렉터는 메서드가 구현된 곳의 메모리 주소를 뽑아내는 기술이다. "),t("code",[s._v("#selector(Person.walk)")])]),s._v(" "),t("h3",{attrs:{id:"_1-키패스"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-키패스"}},[s._v("#")]),s._v(" 1. 키패스")]),s._v(" "),t("p",[s._v("키패스의 경우 자바스크립트 객체 각 키값을 순회할 때에 사용하는 방식과 유사하다. 자바스크립트에서는 "),t("code",[s._v('obj["Hello"]')]),s._v("로도 객체 밸류에 접근할 수 있다.")]),s._v(" "),t("p",[s._v("서브스크립트를 통한 속성 접근이 키패스를 통해 이루어지는 것이다.")]),s._v(" "),t("p",[s._v("클래스 내에서 뎁스가 자꾸 깊어지게 되는 다음 예시를 살펴보자.")]),s._v(" "),t("div",{staticClass:"language-swift extra-class"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("School")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" affiliate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SmallSchool")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" affiliate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SmallSchool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("affiliate "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" affiliate\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SmallSchool")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" classMember"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("classMember"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("classMember "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" classMember\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" person1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"홍길동"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" smallSchool1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SmallSchool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("classMember"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" person1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" school1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("School")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"슈퍼고"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" affiliate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" smallSchool1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 접근이 복잡해진다")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" gildogsName "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" school1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("affiliate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("classMember"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 미리 경로를 지정 (keyPath)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" namePath "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("School")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("affiliate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("classMember"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 딕셔너리방식(서브스크립트)로 접근")]),s._v("\nschool1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("keyPath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" namePath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 홍길동")]),s._v("\n")])])]),t("p",[s._v("한번 키패스로 정의된 타입의 값은 "),t("code",[s._v("appending(path: \\.경로)")]),s._v(" 메서드를 사용할 수 있고, 경로를 추가할 수 있다.")]),s._v(" "),t("h3",{attrs:{id:"_2-셀렉터"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-셀렉터"}},[s._v("#")]),s._v(" 2. 셀렉터")]),s._v(" "),t("div",{staticClass:"language-swift extra-class"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dog")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token attribute atrule"}},[s._v("@objc")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" doubleNum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Double")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.0")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" newValue "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.0")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token attribute atrule"}},[s._v("@objc")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"강아지가 달립니다."')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" runSelector "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token other-directive property"}},[s._v("#selector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("run"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("셀렉터는 오브젝티브C 기반의 기술이기 때문에 메서드에 "),t("code",[s._v("@objc")]),s._v("어트리뷰트를 붙여주어야 한다.")]),s._v(" "),t("p",[s._v("셀렉터는 코드로 UI를 제작할때 사용하게 되는데, 이때 UI 인스턴스의 "),t("code",[s._v("addTarget")]),s._v("메서드의 "),t("code",[s._v("action")]),s._v("에 대한 아규먼트로 특정 동작(함수)를 전달하게 된다. (자바스크립트 addEventListener라고 생각하면 될듯)")]),s._v(" "),t("h2",{attrs:{id:"메타타입"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#메타타입"}},[s._v("#")]),s._v(" 메타타입")]),s._v(" "),t("p",[s._v("인스턴스를 찍어내는 커스텀 타입은 데이터 영역에 저장되어 있다. 데이터 영역에 저장되어 있는 이들도 결국 어떠한 타입으로부터 찍어나온 인스턴스이다.")]),s._v(" "),t("p",[s._v("Dog타입이 있을때, 타입에 대한 타입 인스턴스는 "),t("code",[s._v("Dog.self")]),s._v("이다. 타입 인스턴스의 타입은 "),t("code",[s._v("Dog.Type")]),s._v("이다. 이를 메타타입이라고 한다. 타입의 타입이라고 이해하면 됨.")]),s._v(" "),t("p",[s._v("클래스, 구조체, 열거형은 "),t("code",[s._v("이름.Type")]),s._v("으로 메타타입을 사용하고 프로토콜의 경우 "),t("code",[s._v("프로토콜이름.protocol")]),s._v("로 사용한다.")]),s._v(" "),t("h2",{attrs:{id:"available-available-키워드"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#available-available-키워드"}},[s._v("#")]),s._v(" @available / #available 키워드")]),s._v(" "),t("p",[t("code",[s._v("@available")]),s._v("은 타입, 속성, 메서드 앞에 사용하고 "),t("code",[s._v("#available")]),s._v("은 if/guard/while문에서 사용한다.")]),s._v(" "),t("div",{staticClass:"language-swift extra-class"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token attribute atrule"}},[s._v("@available")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("iOS "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11.0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ViewController")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UIViewController")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("override")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("viewDidLoad")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("viewDidLoad")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token attribute atrule"}},[s._v("@available")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("iOS "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11.0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("doSomething")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// (if, while, guard문으로도 사용 가능)")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token other-directive property"}},[s._v("#available")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("iOS "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11.0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// iOS 11버전이상인 경우 적용 시킬 코드를 작성")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// iOS 11버전미만인 경우 적용 시킬 코드를 작성")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h2",{attrs:{id:"reference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[s._v("#")]),s._v(" Reference")]),s._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"https://www.inflearn.com/course/%EC%8A%A4%EC%9C%84%ED%94%84%ED%8A%B8-%EB%AC%B8%EB%B2%95-%EB%A7%88%EC%8A%A4%ED%84%B0-%EC%8A%A4%EC%BF%A8/dashboard",target:"_blank",rel:"noopener noreferrer"}},[s._v("인프런 - 앨런 swift 문법 마스터 스쿨"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);
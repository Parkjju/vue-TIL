(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{318:function(s,t,a){s.exports=a.p+"assets/img/3-1.96ba38a2.jpeg"},654:function(s,t,a){"use strict";a.r(t);var n=a(6),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"인터넷-주소"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#인터넷-주소"}},[s._v("#")]),s._v(" 인터넷 주소")]),s._v(" "),t("p",[s._v("인터넷 주소는 인터넷 상에서 컴퓨터를 구분하는 목적으로 사용되는 주소이다. IPv4는 4바이트 주소체계이며 IPv6는 16바이트 주소체계이다. (IPv4는 "),t("code",[s._v("2^4*8")]),s._v(", IPv6는 "),t("code",[s._v("2^16*8")]),s._v(")")]),s._v(" "),t("p",[s._v("인터넷 주소는 네트워크 주소와 호스트 주소로 나뉜다. 네트워크 주소를 통해 라우팅되고, 라우터에 도착 후 호스트 주소를 통해 호스트로 이동한다.")]),s._v(" "),t("p",[s._v("아래 그림에서는 "),t("code",[s._v("201.211.172")]),s._v("가 라우터가 되고 마지막 "),t("code",[s._v("103")]),s._v("를 통해 진입한다.")]),s._v(" "),t("p",[t("img",{attrs:{src:a(318),alt:"3-1"}})]),s._v(" "),t("p",[s._v("IPv4 주소 체계 클래스는 네 가지로 구분된다.")]),s._v(" "),t("ol",[t("li",[s._v("클래스 A: 네트워크 아이디 1바이트 & 호스트 아이디 3바이트")]),s._v(" "),t("li",[s._v("클래스 B: 네트워크 아이디 2바이트 & 호스트 아이디 2바이트")]),s._v(" "),t("li",[s._v("클래스 C: 네트워크 아이디 3바이트 & 호스트 아이디 1바이트")]),s._v(" "),t("li",[s._v("클래스 D: 네트워크 아이디 0바이트 & 호스트 아이디 4바이트")])]),s._v(" "),t("p",[s._v("IPv4를 부여받는 집단의 규모에 따라 클래스 결정이 달라진다. 네트워크 아이디는 고정적이기 때문에 호스트를 할당받는 수에 따라 클래스를 지정한다.")]),s._v(" "),t("p",[s._v("IP주소를 참조만 해도 클래스 구분을 할 수 있도록 하기 위해 A, B, C 클래스 첫 번째 바이트 범위가 달라진다.")]),s._v(" "),t("ol",[t("li",[s._v("클래스 A 첫 번째 바이트 범위: 0...127 / 첫 비트가 항상 0으로 시작")]),s._v(" "),t("li",[s._v("클래스 B 첫 번째 바이트 범위: 128...191 / 첫 두 비트가 10으로 시작")]),s._v(" "),t("li",[s._v("클래스 C 첫 번째 바이트 범위: 192...223 // 첫 세 비트가 항상 110으로 시작")])]),s._v(" "),t("h2",{attrs:{id:"port-번호"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#port-번호"}},[s._v("#")]),s._v(" PORT 번호")]),s._v(" "),t("p",[s._v("IP는 컴퓨터를 구분하는 용도로 사용하고 PORT 번호는 소켓을 구분하는 용도로 사용된다. 하나의 프로그램에 둘 이상의 소켓이 존재할 수 있으므로 둘 이상의 PORT가 하나의 프로그램에 의해 할당될 수 있다.")]),s._v(" "),t("p",[s._v("포트번호는 16비트로 사용하고 0~65535 이하 값을 할당받는다. 0~1023까지는 "),t("code",[s._v("Well-known PORT")]),s._v("이며 용도가 결정되어 있다.")]),s._v(" "),t("p",[s._v("외부 요청에 대한 프로그램으로의 데이터 분배는 "),t("code",[s._v("운영체제와 관련되어 있다.")]),s._v(" 포트번호를 참조하여 소켓에 데이터를 할당하게 된다.")]),s._v(" "),t("h2",{attrs:{id:"ipv4-주소-표현을-위한-구조체"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ipv4-주소-표현을-위한-구조체"}},[s._v("#")]),s._v(" IPv4 주소 표현을 위한 구조체")]),s._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sockaddr_in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sa_family_t")]),s._v("     sin_family"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 주소체계")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v("        sin_port"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// PORT번호")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("in_addr")]),s._v("  sin_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 32비트 IP 주소")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v("            sin_zero"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 사용되지 않음")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("in_addr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("in_addr_t")]),s._v("       s_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 32비트 IPv4 인터넷 주소")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[t("code",[s._v("sockaddr_in")]),s._v("이라는 구조체는 총 "),t("code",[s._v("n + 14")]),s._v("바이트로 이루어진다. 포트번호 2바이트, 4바이트 IP주소, "),t("code",[s._v("8바이트 sin_zero")]),s._v("를 합하면 14바이트가 된다. "),t("code",[s._v("sockaddr_in")]),s._v("구조체는 주소표현을 위한 오리지널 구조체인 "),t("code",[s._v("sockaddr")]),s._v("을 IPv4 주소체계에 맞게끔 새로 타입화 한 것이라고 이해하면 된다.")]),s._v(" "),t("p",[s._v("C언어는 메모리 레이아웃 조작이 가능하기 때문에 구조체 속성이 서로 다르게 구성되어 있더라도 "),t("strong",[s._v("포인터 캐스팅 기법")]),s._v("을 통해 "),t("code",[s._v("sockaddr_in")]),s._v("타입을 "),t("code",[s._v("sockaddr")]),s._v(" 타입으로 캐스팅 가능하다.")]),s._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sockaddr_in")]),s._v(" serv_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("serv_sock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sockaddr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serv_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("serv_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error_handling")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bind error"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("위 코드에서 "),t("code",[s._v("servaddr_in")]),s._v(" 구조체가 "),t("code",[s._v("bind")]),s._v(" 함수 인자에 전달된다. 근데 함수 매개변수 타입이 "),t("code",[s._v("sockaddr")]),s._v("이므로 타입 캐스팅을 진행하고, 메모리 레이아웃이 동일하기 때문에 형 변환이 정상적으로 이루어진다.")]),s._v(" "),t("p",[t("code",[s._v("sin_zero")]),s._v("변수는 아예 사용조차 되지 않는 멤버이다.")]),s._v(" "),t("h2",{attrs:{id:"네트워크-바이트-순서와-인터넷-주소-변환"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#네트워크-바이트-순서와-인터넷-주소-변환"}},[s._v("#")]),s._v(" 네트워크 바이트 순서와 인터넷 주소 변환")]),s._v(" "),t("p",[s._v("CPU가 빅 엔디안, 리틀 엔디안 등인지에 따라 상위 바이트를 메모리 주소에 저장하는 방법이 달라진다. 이는 네트워크 통신 과정에서 각 호스트별로 데이터 표현 방식이 다르다는 것을 의미한다.")]),s._v(" "),t("p",[s._v("이를 위해 "),t("strong",[s._v("네트워크 바이트 순서")]),s._v("라는 체계를 도입하게 된다. 빅 엔디안과 리틀 엔디안이 "),t("strong",[s._v("호스트 바이트 순서이다.")]),s._v(" 이는 CPU별로 다른 데이터 저장방식을 의미한다.")]),s._v(" "),t("p",[s._v("네트워크 통신 표준을 위해 "),t("strong",[s._v("네트워크 바이트 순서는 빅 엔디안을 기준으로 한다.")]),s._v(" 이러한 작업은 개발자가 직접 하는 것이 아닌 "),t("strong",[s._v("소켓이 내부적으로 엔디안 변환 처리를 해준다.")])]),s._v(" "),t("p",[t("strong",[s._v("소켓 생성 이후에는")]),s._v(" 엔디안 변환 처리를 내부적으로 자동으로 해주지만 "),t("strong",[s._v("소켓 생성 과정에서는")]),s._v(" 데이터 엔디안 처리를 직접 해줘야 한다.")]),s._v(" "),t("ol",[t("li",[t("code",[s._v("unsigned short htons(unsigned short);")]),s._v(": 호스트 바이트 순서를 네트워크 순서로 바꿔라")]),s._v(" "),t("li",[t("code",[s._v("unsigned short ntohs(unsigned short);")]),s._v(": 네트워크 바이트 순서를 호스트 바이트 순서로 바꿔라")]),s._v(" "),t("li",[t("code",[s._v("unsigned long htonl(unsigned long);")]),s._v(", "),t("code",[s._v("unsigned long ntohl(unsigned long);")])])]),s._v(" "),t("p",[t("code",[s._v("h")]),s._v("는 호스트, "),t("code",[s._v("n")]),s._v("은 네트워크, "),t("code",[s._v("s")]),s._v("는 "),t("code",[s._v("short")]),s._v("자료형, "),t("code",[s._v("l")]),s._v("은 "),t("code",[s._v("long")]),s._v(" 자료형을 의미한다.")]),s._v(" "),t("p",[s._v("기본적으로 CPU별로 엔디안 시스템이 어떻게 갖춰져 있는지 호스트마다 다르기 때문에 코드 작성시 변환 함수는 호출해주는 것이 안전하다.")]),s._v(" "),t("h2",{attrs:{id:"인터넷-주소의-초기화와-할당"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#인터넷-주소의-초기화와-할당"}},[s._v("#")]),s._v(" 인터넷 주소의 초기화와 할당")]),s._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<arpa/inet.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("in_addr_t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("inet_addr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[t("code",[s._v("inet_addr")]),s._v("함수는 "),t("code",[s._v("211.214.107.99")]),s._v("와 같이 점이 찍힌 10진수 문자열을 전달했을 때 문자열 정보를 참조하여 32비트 IP정수형 주소를 반환해준다. 반환 시 네트워크 바이트 주소인 빅 엔드안으로 변환해준다.")]),s._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<arpa/inet.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" argc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("addr1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.212.124.78"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" conv_addr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("inet_addr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("addr1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("conv_addr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("INADDR_NONE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Error occured! \\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Network ordered integer addr: %#lx \\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" conv_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("IP주소를 반환받아서는 "),t("code",[s._v("sockaddr_in")]),s._v(" 구조체의 IP주소 저장 멤버에 데이터를 할당해야 한다. "),t("code",[s._v("inet_addr")]),s._v("을 통해 반환받은 IP주소를 구조체 멤버에 직접 할당해도 되지만, 멤버의 참조를 "),t("code",[s._v("inet_aton")]),s._v("함수에 전달하면 반환 성공 시 해당 멤버 주소를 참조하여 직접 IP주소 할당까지 해준다.")]),s._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<arpa/inet.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 성공 시 1, 실패 시 0 반환")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("inet_aton")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("in_addr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[t("code",[s._v("inet_ntoa")]),s._v("는 네트워크 바이트 주소 데이터를 눈으로 인식하기 쉬운 문자열 형태로 반환해준다.")]),s._v(" "),t("p",[s._v("아래는 인터넷 주소 초기화 전체 코드이다.")]),s._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sockaddr_in")]),s._v(" addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 소켓 데이터 구조체 선언")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("serv_ip "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"211.217.168.13"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// IP주소 문자열 선언")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("serv_port "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"9190"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 포트번호 문자열 선언")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("memset")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 소켓 데이터 모든 멤버 초기화")]),s._v("\naddr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sin_family "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" AF_INET"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 주소체계 지정 - IPv4")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// inet_addr로 IP 주소 문자열 네트워크 바이트 주소로 변환")]),s._v("\naddr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sin_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s_addr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("inet_addr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("serv_ip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 문자열 기반 "9190" 데이터를 정수형으로 변환하고 네트워크 바이트 주소로 변환 및 할당')]),s._v("\naddr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sin_port "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("htons")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("atoi")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("serv_port"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[t("code",[s._v("INADDR_ANY")]),s._v("는 현재 실행중인 컴퓨터의 IP주소를 불러와준다.")]),s._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[s._v("addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sin_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s_addr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("htonl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("INADDR_ANY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("루프백 주소 127.0.0.1")]),s._v(" "),t("p",[s._v("흔히 로컬호스트라고 부르는 127.0.0.1 주소는 루프백 주소를 의미한다. 네트워크로 나아가지 않고 프로그램이 실행되는 환경으로 다시 되돌아오게끔 약속되어 있는 주소이다.")])]),s._v(" "),t("p",[s._v("소켓에 인터넷 주소를 할당하기 위해서는 "),t("code",[s._v("bind")]),s._v("함수를 호출하게 된다.")]),s._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/socket.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 성공 시 0, 실패 시 1을 반환한다.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" sockfd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sockaddr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("myaddr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("socklen_t")]),s._v(" addrlen"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("ol",[t("li",[t("code",[s._v("sockfd")]),s._v(": 주소정보를(IP & PORT) 할당할 소켓의 파일 디스크립터")]),s._v(" "),t("li",[t("code",[s._v("myaddr")]),s._v(": 주소정보를 지니는 구조체 변수 주소 값")]),s._v(" "),t("li",[t("code",[s._v("addrlen")]),s._v(": "),t("code",[s._v("myaddr")]),s._v(" 구조체 변수의 길이정보")])]),s._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("memset")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serv_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("serv_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nserv_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sin_family"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("AF_INET"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nserv_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sin_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s_addr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("htonl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("INADDR_ANY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nserv_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sin_port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("htons")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("atoi")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("serv_sock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sockaddr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serv_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("serv_addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error_handling")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bind() error"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);
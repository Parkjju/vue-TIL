(window.webpackJsonp=window.webpackJsonp||[]).push([[486],{1056:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"테이블뷰-스토리보드"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#테이블뷰-스토리보드"}},[t._v("#")]),t._v(" 테이블뷰 (스토리보드)")]),t._v(" "),s("p",[t._v("테이블 뷰는 세로로만 스크롤이 가능한 뷰이다. 테이블 뷰는 테이블뷰 셀들로 이루어져 있다. 테이블뷰와 뷰 컨트롤러 간의 상호작용을 위해 델리게이트 패턴을 사용한다.")]),t._v(" "),s("p",[t._v("스토리보드를 통해 테이블뷰를 구성하는 과정을 아래와 같다.")]),t._v(" "),s("ol",[s("li",[t._v("라이브러리에서 Table View를 화면에 배치한다. 일반적으로 테이블 뷰는 화면 전체에 걸쳐 나타나기 때문에 제약조건도 상-하-좌-우 모두 기본 margin간격을 제외하고 딱 붙인다.")]),t._v(" "),s("li",[t._v("라이브러리에서 TableView Cell을 가져와 테이블 뷰에 붙인다.")]),t._v(" "),s("li",[t._v("테이블뷰 셀 내부에 컨텐츠를 원하는대로 집어넣는다. 이미지뷰, 레이블 등을 적절히 스택뷰와 함께 섞어 구성한다.")]),t._v(" "),s("li",[t._v("이니셜 뷰컨트롤러에 테이블 뷰 컨트롤러와 관련된 프로토콜을 채택하고 필수 구현대상 함수를 구현한다.")])]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ViewController")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UIViewController")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewDataSource")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token attribute atrule"}},[t._v("@IBOutlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("weak")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("viewDidLoad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("viewDidLoad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dataSource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("tableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" numberOfRowsInSection section"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("tableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cellForRowAt indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCell")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[s("code",[t._v("UITableViewDataSource")]),t._v("프로토콜을 채택하고 테이블뷰 인스턴스를 생성한다.")]),t._v(" "),s("li",[t._v("테이블뷰 인스턴스의 "),s("code",[t._v("dataSource")]),t._v(" 속성을 self 뷰 컨트롤러 인스턴스와 연결짓는 것이 테이블 뷰 델리게이트 패턴 구현 형태이다.")]),t._v(" "),s("li",[s("code",[t._v("func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int")]),t._v(", "),s("code",[t._v("func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell")]),t._v(" 두 함수를 구현한다.")])]),t._v(" "),s("p",[s("code",[t._v("numberOfRowsInSection")]),t._v("은 테이블뷰 섹션별 셀의 숫자이고, "),s("code",[t._v("cellForRowAt")]),t._v(" 파라미터를 갖는 함수는 커스텀 테이블 뷰 셀을 정의한 뒤 리턴하면 된다.")]),t._v(" "),s("p",[t._v("뷰 컨트롤러에 데이터를 서버 데이터를 로드하고 배열 형태로 저장했다고 가정해보자. 해당 데이터들을 각 셀에 표현해주기 위해서는 "),s("code",[t._v("tableView(_ tableView: UITablewView, cellForRowAt indexPath: IndexPath) -> UITableViewCell")]),t._v(" 함수를 정의해주면 된다.")]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UIKit")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ViewController")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UIViewController")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewDataSource")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token attribute atrule"}},[t._v("@IBOutlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("weak")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" moviesArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Movie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Movie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("movieImage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UIImage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("named"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"이미지명.png"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" movieName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"영화명"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" movieDescription"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"영화 줄거리.."')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .... 나머지 데이터 정의")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("viewDidLoad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("viewDidLoad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 델리게이트 정의")]),t._v("\n        tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dataSource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 테이블 뷰 각 셀의 높이를 지정한다.")]),t._v("\n        tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rowHeight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("tableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" numberOfRowsInSection section"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 테이블 뷰 내의 특정 섹션에 몇 개의 셀이 들어가는지 정의한다.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 불러온(정의한) 데이터 배열의 count 속성을 리턴하면 된다.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" moviesArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("tableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cellForRowAt indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCell")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UITableView.dequeueReusableCell 메서드를 통해 셀을 빼온다.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 셀을 빼왔으면 원하는 타입으로 타입 다운캐스팅을 한다.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cell "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dequeueReusableCell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("withIdentifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MovieCell"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MovieCell")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// indexPath.section - 그룹에 대한 섹션을 나타냄")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// indexPath.row - 각 그룹당 몇번째 row인지 인덱스를 나타냄")]),t._v("\n\n        cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mainImageView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("image "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" moviesArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("movieImage\n        cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("movieNameLabel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" moviesArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("movieName\n        cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("descriptionLabel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" moviesArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("movieDescription\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cell\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",[s("li",[t._v("뷰컨트롤러 저장속성에 표현할 데이터 타입을 정의한다.")]),t._v(" "),s("li",[t._v("델리게이트를 self로 지정하고 각 셀의 height값을 지정한다. (tableView.rowHeight)")]),t._v(" "),s("li",[t._v("tableView의 "),s("code",[t._v("numberOfRowsInSection")]),t._v(" 파라미터를 갖는 함수를 구현한다. 섹션에 대해 불러온 데이터 수를 전달하면 된다. (배열.count)")]),t._v(" "),s("li",[t._v("tableView의 "),s("code",[t._v("cellForRowAt")]),t._v(" 파라미터를 갖는 함수를 구현한다. 각 셀을 어떻게 표현할지 정의하는 함수이다.\n"),s("ul",[s("li",[s("code",[t._v("tableView.dequeueReusableCell(withIdentifier:for:)")]),t._v(" 메서드를 통해 각 셀에 대해 접근한다.")]),t._v(" "),s("li",[t._v("스토리보드의 테이블뷰 셀을 클릭하여 identifier를 정의한 뒤 "),s("code",[t._v("dequeueReusableCell")]),t._v("의 아규먼트에 그대로 전달한다.")]),t._v(" "),s("li",[s("code",[t._v("dequeueReusableCell")]),t._v("의 "),s("code",[t._v("for")]),t._v(" 파라미터에는 호출자 함수 "),s("code",[t._v("tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell")]),t._v("의 "),s("code",[t._v("indexPath")]),t._v(" 파라미터를 그대로 전달하면 된다.")]),t._v(" "),s("li",[s("code",[t._v("indexPath")]),t._v("는 각 셀의 인덱스를 나타내는 인스턴스이다. "),s("code",[t._v("indexPath.row")]),t._v(" 속성을 통해 테이블 뷰 내의 셀 인덱스를 Int타입으로 얻어낼 수 있다.")]),t._v(" "),s("li",[t._v("dequeueReusableCell로 셀에 대한 정보를 뽑아냈으면 "),s("strong",[t._v("반드시 타입 다운캐스팅을 통해 셀 인스턴스에 대한 정보를 명확히 해야한다.")])]),t._v(" "),s("li",[t._v("셀 인스턴스의 저장속성 각각에 접근하여 "),s("strong",[t._v("API로부터 불러온 데이터 indexPath.row와 함께 데이터를 연동한다.")])]),t._v(" "),s("li",[t._v("정의한 셀의 형태를 리턴한다.")])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("rowHeight")]),t._v(" "),s("p",[t._v("테이블뷰 인스턴스의 "),s("code",[t._v("rowHeight")]),t._v("속성에 상수값을 직접 할당하는 방식이 아닌 델리게이트 메서드 형태로 셀 높이를 지정할 수도 있다.")]),t._v(" "),s("p",[s("code",[t._v("func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat")]),t._v(" 함수에 셀 높이값을 리턴하면 된다. "),s("code",[t._v("switch")]),t._v("문 분기를 통해 각 셀에 대한 높이값을 유기적으로 변경할 수 있는 로직을 구현할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extension")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ViewController")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewDelegate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("tableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" heightForRowAt indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CGFloat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("상수값을 직접 전달해도 되지만 "),s("code",[t._v("UITableView")]),t._v("의 타입 저장속성인 "),s("code",[t._v("automaticDimension")]),t._v("을 사용해도 된다. 개행 시 추가되는 높이에 따라 자동으로 높이를 늘려주는 등의 상황에서 사용된다. 파라미터가 "),s("code",[t._v("heightForRowAt")]),t._v("인 함수에서 사용하는 것이 아니라 "),s("code",[t._v("estimatedHeightForRowAt")]),t._v(" 파라미터를 갖는 함수에서 사용한다. (셀프 사이징 셀에 대한 개념을 이해해야한다. "),s("a",{attrs:{href:"https://gigas-blog.tistory.com/2",target:"_blank",rel:"noopener noreferrer"}},[t._v("다음 문서를"),s("OutboundLink")],1),t._v(" 참고하자.)")]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extension")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ViewController")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewDelegate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("tableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" estimatedHeightForRowAt indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CGFloat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("automaticDimension\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("테이블 뷰 셀 register")]),t._v(" "),s("ol",[s("li",[t._v("테이블 뷰 셀을 스토리보드로 등록할때 반드시 Custom Class에 UITableViewCell로 생성한 셀 클래스타입명을 기입해주고 (Identity Inspector메뉴)")]),t._v(" "),s("li",[t._v("Attributes Inspector에서는 Identifier속성을 지정해주고 후에 dequeueReusableCell 메서드의 identifier 파라미터 값으로 사용한다.")])]),t._v(" "),s("p",[t._v("하나라도 안하면 레지스터 관련 오류가 발생하므로 반드시 주의하자.")])]),t._v(" "),s("p",[t._v("위 예제코드를 MVC로 리팩토링 하게 되면 서버 통신을 통해 데이터를 얻어오는 함수를 따로 구현해야 한다.")]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" movieDataArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Movie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("makeMovieData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// API 요청코드")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("getMovieData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Movie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" movieDataArray\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("초기 데이터는 빈 데이터로 데이터의 형태만 정의하고, 매니저 메서드에서 API요청을 통해 데이터를 저장하는 방식으로 리팩토링한다.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("코드로 테이블 뷰 구현")]),t._v(" "),s("p",[t._v("스토리보드가 아닌 코드로 테이블 뷰를 구현할때 주의할 점은 아래와 같다.")]),t._v(" "),s("ol",[s("li",[t._v("테이블 뷰 제약조건은 상-하-좌-우 0으로 구성한다. (반드시는 아님)")]),t._v(" "),s("li",[t._v("테이블 뷰에 테이블 뷰 셀 인스턴스도 등록해줘야 한다. register 메서드를 통해 등록한다. "),s("code",[t._v('tableView.register(CustomTableViewCell.self, forCellReuseIdentifier: "셀 identifier")')])])]),t._v(" "),s("p",[t._v("셀을 테이블에 등록할때는 "),s("strong",[t._v("인스턴스의 타입을 전달하는 것이 아니라 인스턴스 타입의 타입, 즉 메타타입을 전달해야 한다.")]),t._v(" "),s("code",[t._v("forCellReuseIdentifier")]),t._v(" 문자열 값은 추후 "),s("code",[t._v("dequeueReusableCell")]),t._v("메서드를 호출할때 사용한다.")]),t._v(" "),s("p",[t._v("스토리보드가 아닌 XIB파일을 통해 코드로 직접 인스턴스를 생성하여 테이블 뷰에 셀을 등록할 때에는 "),s("code",[t._v("func register(_ nib: UINib?, forCellReuseIdentifier identifier: String)")]),t._v(" 함수를 사용한다. "),s("code",[t._v("nib")]),t._v(" 파라미터에는 "),s("code",[t._v("UINib")]),t._v(" 생성자를 통해 인스턴스를 직접 전달하며, 인스턴스 형태는 "),s("code",[t._v("UINib(nibName: String, bundle: Bundle?)")]),t._v("이다. 생성자의 bundle 파라미터는 잘 사용하지 않는다고 한다.")]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[t._v("musicTableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UINib")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nibName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("musicCellIdentifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bundle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token nil constant"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forCellReuseIdentifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("musicCellIdentifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("테이블뷰 separatorStyle")]),t._v(" "),s("p",[t._v("테이블뷰와 내부 셀을 정의하면 기본적으로 셀 사이를 구분해주는 구분선이 기본 제공된다. "),s("code",[t._v("separatorStyle")]),t._v(" 속성 조정을 통해 없애주거나 커스텀 스타일링도 가능하다.")])]),t._v(" "),s("h2",{attrs:{id:"화면-전환과-데이터-전달"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#화면-전환과-데이터-전달"}},[t._v("#")]),t._v(" 화면 전환과 데이터 전달")]),t._v(" "),s("p",[t._v("테이블 뷰 셀 클릭을 통해 다음 화면으로 전환하기 위해 필요한 내용은 아래와 같다.")]),t._v(" "),s("ol",[s("li",[t._v("새로운 뷰 컨트롤러 생성 및 세그웨이 연결")]),t._v(" "),s("li",[t._v("서브뷰 UI설정, 전달받을 데이터 속성 정의")]),t._v(" "),s("li",[t._v("테이블뷰 델리게이트 패턴으로 이벤트 감지 및 데이터 전달함수 구현")])]),t._v(" "),s("p",[s("code",[t._v("Movie")]),t._v("라는 모델이 위의 예제코드와 동일하게 영화 타이틀, 줄거리, 이미지로 정의되어 있다고 가정해보자. 영화 디테일 페이지의 뷰컨트롤러는 아래와 같이 정의할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DetailViewController")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UIViewController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token attribute atrule"}},[t._v("@IBOutlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("weak")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" mainImageView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UIImageView")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token attribute atrule"}},[t._v("@IBOutlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("weak")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" movieNameLabel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UILabel")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token attribute atrule"}},[t._v("@IBOutlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("weak")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" movieDescriptionLabel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UILabel")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" movieData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Movie")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("viewDidLoad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("viewDidLoad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setupUI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("setupUI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        mainImageView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("image "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" movieData"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("movieImage\n        movieNameLabel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" movieData"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("movieName\n        movieDescriptionLabel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" movieData"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("movieDescription\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("스토리보드와 UI요소를 정의 및 연결하고 테이블 뷰에서 UI 저장속성들에 직접 접근하는 방식으로 데이터를 내려주면 된다.")]),t._v(" "),s("p",[t._v("테이블뷰에서 데이터를 전달하기 위해서 필요한 부분은 다음과 같다.")]),t._v(" "),s("ol",[s("li",[t._v("테이블 뷰 자체에 델리게이트를 뷰컨트롤러로 지정함으로써 터치와 같은 이벤트의 처리 당사자를 뷰 컨트롤러에게 위임한다.\n"),s("ul",[s("li",[s("code",[t._v("UITableViewDelegate")]),t._v(" 프로토콜을 채택한다.")]),t._v(" "),s("li",[s("code",[t._v("func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath)")]),t._v(" 함수를 구현한다.")])])]),t._v(" "),s("li",[t._v("세그웨이로 UI연결을 한 경우, "),s("code",[t._v("performSegue")]),t._v("를 통해 데이터를 전달하게 된다.\n"),s("ul",[s("li",[t._v("스토리보드에 세그웨이 identifier를 정의하고 그대로 문자열을 performSegue의 withIdentifier 파라미터에 전달한다.")]),t._v(" "),s("li",[s("code",[t._v("sender")]),t._v("파라미터에 "),s("code",[t._v("didSelectRowAt")]),t._v(" 파라미터를 전달해야한다. 이유는 아래에 정리한다.")])])]),t._v(" "),s("li",[t._v("세그웨이를 통한 데이터 전달을 위해 전달할 데이터를 정의해야한다. 이는 세그웨이의 "),s("code",[t._v("prepare")]),t._v(" 메서드를 오버라이딩 함으로써 구현 가능하다.\n"),s("ul",[s("li",[t._v("어떤 데이터를 전달해야하는가.. 를 다시 생각해보면 테이블 뷰 중 클릭된 특정 셀 내에 포함된 이미지와 타이틀 디스크립션 데이터들을 전달해야한다.")]),t._v(" "),s("li",[t._v("이때 테이블 뷰에서 클릭된 셀의 row값을 알아야한다. 이는 테이블뷰 델리게이트 프로토콜 함수에서 "),s("code",[t._v("didSelectRowAt")]),t._v(" 파라미터를 통해 알 수 있다.")]),t._v(" "),s("li",[t._v("performSegue함수가 호출되는 시점이 "),s("code",[t._v("prepare")]),t._v("함수가 호출된 이후이기 때문에, performSegue의 sender파라미터에 "),s("code",[t._v("didSelectRowAt")]),t._v(" 파라미터를 전달했을때 "),s("code",[t._v("prepare")]),t._v("의 sender 파라미터의 값이 "),s("code",[t._v("didSelectRowAt")]),t._v("이 되는 것이다. 타입 다운캐스팅은 필요하다.")]),t._v(" "),s("li",[t._v("모델로부터 영화 데이터들을 저장한 배열을 얻어오고 해당 배열의 "),s("code",[t._v("didSelectRowAt.row")]),t._v(" 인덱스의 값을 얻는다.")]),t._v(" "),s("li",[s("code",[t._v("segue.destination")]),t._v("을 통해 접근할 디테일페이지 뷰 컨트롤러 인스턴스를 얻고, 내부 저장속성인 UI요소들의 text 등의 속성들을 데이터값들로 초기화시키면 끝!")])])])]),t._v(" "),s("p",[t._v("코드로 정리하면 아래와 같다.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("델리게이트 설정")]),t._v(" "),s("p",[s("code",[t._v("dataSource")]),t._v("나, 텍스트필드 델리게이트 설정과 동일하게 "),s("code",[t._v("UITableViewDelegate")]),t._v("도 "),s("code",[t._v("viewDidLoad")]),t._v("등의 시점에서 테이블 뷰 이벤트처리에 대한 당사자를 self 인스턴스, 즉 현재 뷰 컨트롤러로 지정해야한다.")]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("viewDidLoad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("viewDidLoad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dataSource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 반드시 추가!")]),t._v("\n    tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delegate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v("\n\n    tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rowHeight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),t._v("\n\n    movieDataManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeMovieData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("dataSource")]),t._v(" 델리게이트는 "),s("strong",[t._v("테이블 뷰 데이터 표현의 책임이")]),t._v(" 뷰컨트롤러에 있는 것이고, "),s("code",[t._v("delegate")]),t._v("는 "),s("strong",[t._v("테이블 뷰 자체와 사용자의 상호작용 처리의 책임이")]),t._v(" 뷰컨트롤러에 있는 것이다.")])]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extension")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ViewController")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewDelegate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("tableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" didSelectRowAt indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 스토리보드의 세그웨이 identifier를 전달")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. sender에 tableView didSelectRowAt 파라미터를 전달.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("performSegue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("withIdentifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"toDetail"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("prepare")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" segue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UIStoryboardSegue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Any")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("segue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("identifier "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"toDetail"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 세그웨이 identifier로 분기")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 디테일페이지 뷰 컨트롤러 인스턴스를 얻기 위해 세그웨이 목적지 인스턴스를 타입 다운캐스팅한다.")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" detailVC "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" segue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("destination "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DetailViewController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5. tableView 델리게이트 함수의 sender파라미터가 prepare의 sender와 동일하지만, 타입 다운캐스팅을 해줘야 한다.")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" indexPath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sender "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexPath")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6. 모델로부터 배열 전체를 뽑아온다.")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" movieArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" movieDataManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMovieData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7. 뽑아온 배열의 인덱스에 접근하여 해당 데이터를 세그웨이 목적지 뷰 컨트롤러 인스턴스에 전달한다.")]),t._v("\n            detailVC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("movieData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" movieArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("dataSource와 dequeue")]),t._v(" "),s("p",[t._v("데이터소스 델리게이트 함수 중 "),s("code",[t._v("cellForRowAt")]),t._v(" 파라미터가 포함된 함수를 필수 구현해야 했었다. 이때 테이블 뷰 내에 포함된 전체 셀을 얻어오기 위해 "),s("code",[t._v('tableView.dequeueReusableCell(withIdentifier: "MovieCell", for: indexPath)')]),t._v("라는 함수를 호출했어야 했다.")]),t._v(" "),s("p",[t._v("함수 이름이 왜 "),s("code",[t._v("dequeueReusableCell")]),t._v("일까? 실제로 테이블 뷰 내의 셀들이 스크롤에 따라 스크린에서 사라지고 나타나는 방식이 자료구조 덱 자료구조와 동일하게 동작하기 때문이다. 덱은 "),s("code",[t._v("Double-ended queue")]),t._v("로, push되고 pop되는 입구가 한방향이 아닌 양방향으로 정의된다.")]),t._v(" "),s("p",[t._v("스크롤에서 생각해보아도 아래로 스크롤하면 위에서 데이터가 끌어내려오고 아래로 데이터가 pop된다. 반대의 경우 위로 데이터가 pop되고 아래에서 데이터가 push된다.")]),t._v(" "),s("p",[t._v("데이터 push와 pop이 이루어질때에는 "),s("strong",[t._v("메타데이터를 이루는 인스턴스를 메모리 상에서 완전히 삭제하는 것이 아니다.")]),t._v(" 화면에서 테이블뷰 셀이 빠져나가면 내부 데이터만 비워진 채로 인스턴스가 메모리에 남게 된다.")]),t._v(" "),s("p",[t._v("즉, 우리가 눈으로 보는 데이터의 구성은 "),s("code",[t._v("[Movie, Movie, Movie.. , Movie]")]),t._v(" 이겠지만 실제 구성은 "),s("code",[t._v("[텅빈 Movie, Movie, Movie, ... Movie, 텅빈 Movie]")]),t._v("의 형태로 존재하며 스크린에서 인스턴스가 빠져나갈때 데이터를 비우고 양쪽 끝단에 위치시키며 다시 데이터가 푸시될때에는 양쪽 끝단에 위치한 텅 빈 인스턴스를 채워넣는 방식으로 이루어진다는 것이다.")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("테이블뷰 렌더링 이후 데이터의 수정")]),t._v(" "),s("p",[t._v("테이블 뷰와 내부 셀이 기존 데이터에 따라 화면에 그려진 이후 시점에 내부 데이터의 수정이 이루어진 경우 "),s("strong",[t._v("테이블 뷰에 데이터가 변경되었다는 상황에 대해 알려줘야 한다.")])]),t._v(" "),s("p",[t._v("해당 기능을 하는 메서드는 "),s("code",[t._v("reloadData()")]),t._v(" 메서드이다. 데이터를 새로고침 한다고 생각하면 된다.")]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attribute atrule"}},[t._v("@IBAction")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("addButtonTapped")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" sender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UIBarButtonItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    movieDataManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateMovieData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reloadData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("화면 이동 후 다른 화면으로 다시 이동하였을때 기존 테이블 뷰를 업데이트 하려면 "),s("code",[t._v("viewWillAppear")]),t._v(" 생명주기에서 리로드를 해주면 된다.")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("테이블 뷰 셀 오토레이이아웃")]),t._v(" "),s("p",[t._v("테이블 뷰 셀 인스턴스 생성을 위해 "),s("code",[t._v("UITableViewCell")]),t._v(" 클래스 상속을 받게 되면 아래와 같은 함수들이 자동으로 작성된다.")]),t._v(" "),s("p",[s("code",[t._v("awakeFromNib")]),t._v("함수는 일종의 테이블 뷰 셀의 생명주기와 관련된 함수인데 스토리보드와 코드를 연결할때 사용되는 함수이다.")]),t._v(" "),s("p",[t._v("코드로만 오토레이아웃을 잡기 위해서는 "),s("code",[t._v("init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)")]),t._v(" 생성자 함수를 오버라이딩 해야한다.")]),t._v(" "),s("p",[t._v("이때 수퍼클래스의 생성자를 호출해야하는데 "),s("code",[t._v("style")]),t._v(" 파라미터에는 일반적으로 "),s("code",[t._v(".default")]),t._v(" 열거형 케이스를 전달한다. "),s("code",[t._v("reuseIdentifier")]),t._v("는 생성자 함수의 파라미터를 그대로 전달하면 된다.")]),t._v(" "),s("p",[t._v("또한 코드로만 테이블 뷰 셀의 오토레이아웃을 구성할때 필수생성자를 추가로 구현해야하는데, 발생한 에러메세지의 Fix버튼만 클릭하면 자동으로 만들어지며 그대로 사용하면 된다.")]),t._v(" "),s("p",[t._v("제약조건 설정 코드는 동일하게 "),s("code",[t._v("updateConstraints")]),t._v("함수를 , 나머지 레이아웃 관련 스타일링은 "),s("code",[t._v("layoutSubviews")]),t._v(" 함수를 오버라이딩 하면 된다.")]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 오버라이딩 생성자 함수")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CellStyle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reuseIdentifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reuseIdentifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" reuseIdentifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 필수생성자")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("required")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("coder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSCoder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fatalError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"init(coder:) has not been implemented"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("updateConstraints")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setConstraints")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateConstraints")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("layoutSubviews")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("layoutSubviews")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    profileView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clipsToBounds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    profileView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cornerRadius "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" profileView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("frame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("awakeFromNib")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awakeFromNib")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialization code")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("setSelected")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" selected"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" animated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSelected")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selected"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" animated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" animated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Configure the view for the selected state")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("h2",{attrs:{id:"테이블-뷰-셀-데이터-세팅"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#테이블-뷰-셀-데이터-세팅"}},[t._v("#")]),t._v(" 테이블 뷰 셀 데이터 세팅")]),t._v(" "),s("p",[t._v("기존 방식으로는 "),s("code",[t._v("func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell")]),t._v(" 함수에서 "),s("code",[t._v("indexPath.row")]),t._v("로 서브스크립팅 하여 뽑아온 UI 요소에 직접 하나하나 접근하여 데이터를 세팅하는 방식을 사용했었다.")]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("tableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cellForRowAt indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCell")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cell "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dequeueReusableCell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("withIdentifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"memberCell"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemberTableViewCell")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 셀을 뽑아온 뒤")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UITableViewCell 인스턴스 UI 저장속성 데이터에 직접 접근")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 모델로부터 데이터를 뽑아와 세팅")]),t._v("\n    cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("profileView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("image "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" memberManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("profileImage\n    cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nameLabel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" memberManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n    cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addressLabel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" memberManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address\n    cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("selectionStyle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("none")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cell\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("이러한 방식이 아니라 전달할 데이터 전체 객체에 대해 UITableViewCell 클래스 내에 저장속성 메모리 공간을 미리 마련해둔 뒤 전체를 한번에 전달하는 방식을 사용하는 것이 일반적이다.")]),t._v(" "),s("p",[t._v("이때 전달받은 전체 객체 데이터는 다시 하나씩 접근하여 세팅하는 방식이 아니라, "),s("strong",[t._v("didSet 속성감시자를 통해 각 데이터를 세팅하게 된다.")])]),t._v(" "),s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MemberTableViewCell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCell")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" member"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Member")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("didSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" member "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" member "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            profileView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("image "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" member"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("profileImage\n            nameLabel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" member"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n            addressLabel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" member"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("member라는 저장속성 데이터가 바뀔때마다 매번 UI요소에 직접 반영하는 코드이다.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("XIB NIB")]),t._v(" "),s("p",[t._v("UIKit 기반의 프로젝트에서 사용되는 개념이며 SwiftUI 프레임워크에서는 사용되지 않는다. UIKit에서 UI에 대한 컴포넌트를 생성하기 위해 사용된다.")]),t._v(" "),s("p",[t._v("XIB는 Xcode Interface Builder, NIB는 Nextstep Interface Builder의 약자이다. 둘은 기능적으로 동일하지만 "),s("code",[t._v("nib")]),t._v("은 좀 더 로우한 형태의 파일이고 xib파일을 컴파일하면 nib으로 변환된다.")]),t._v(" "),s("p",[t._v("테이블 뷰 생성 후 직접 UI 라이브러리에서 테이블 뷰 셀을 가져와 붙여도 되지만 테이블 뷰 셀 재사용을 위해 xib파일을 생성해도 된다.")]),t._v(" "),s("p",[t._v("MVC패턴 아래 뷰 그룹에 Cell 파일을 생성할때 xib파일과 함께 생성한다는 옵션을 체크하여 파일 생성을 하게 되면 "),s("code",[t._v(".xib")]),t._v("확장자의 파일도 함께 생성된다.")])]),t._v(" "),s("h2",{attrs:{id:"reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[t._v("#")]),t._v(" Reference")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://www.inflearn.com/course/%EC%8A%A4%EC%9C%84%ED%94%84%ED%8A%B8-%EB%AC%B8%EB%B2%95-%EB%A7%88%EC%8A%A4%ED%84%B0-%EC%8A%A4%EC%BF%A8-%EC%95%B1%EB%A7%8C%EB%93%A4%EA%B8%B0/dashboard",target:"_blank",rel:"noopener noreferrer"}},[t._v("앨런 Swift 문법 마스터스쿨"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://medium.com/@fsamuelsmartins/difference-between-nib-and-xib-ios-dd3d0ea1e6b0",target:"_blank",rel:"noopener noreferrer"}},[t._v("Difference between Nib and Xib (iOS)"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://gigas-blog.tistory.com/2",target:"_blank",rel:"noopener noreferrer"}},[t._v("TableView 동적 높이 설정"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);